services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    secrets:
      - db_password
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init/roles.sql:/docker-entrypoint-initdb.d/roles.sql
    ports:
      - 5432:5432
    # env_file: # TODO: Environments, maybe?
    #   - .env
    #   - .env.custom
    environment:
      # - POSTGRES_USER=${POSTGRES_USER} #TODO
      # - POSTGRES_DB=${POSTGRES_DB} #TODO
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password ## TODO: Multiple passwords
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"] ## TODO: healthcheck by someone else?
      interval: 10s
      timeout: 5s
      retries: 5

  # Migrations to initialize Postgres DB
  migrations:
    image: redgate/flyway:11
    container_name: flyway_migrations
    secrets:
      - db_password
    command: migrate
    volumes:
      - ./db/migrations:/flyway/sql
      - ./flyway.toml:/flyway/conf/flyway.toml
    depends_on:
      db:
        condition: service_healthy

  # Web service running ASP.NET Core web API
  backend:
    container_name: linksapi_backend
    build:
      context: .
      target: final
    ports:
      - 8080:8080
    # TODO: env_file
    environment:
      ConnectionStrings__DefaultConnection: /run/secrets/db_connectionstring ## TODO: Fix?
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

secrets: # TODO: Way more secrets!
  db_password:
    file: secrets/db_password.txt
  db_connectionstring:
    file: secrets/db_connectionstring.txt

volumes:
  db_data:
